name: Build and Publish image to Docker Hub
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Read version from package.json
        id: package-version
        run: echo "VERSION=$(jq -r .version package.json)" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ vars.ORGANIZATION_NAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build . -t ${{ vars.ORGANIZATION_NAME }}/${{ vars.CHAT_SERVICE_IMAGE_NAME }}:$VERSION --pull 
          docker push ${{ vars.ORGANIZATION_NAME }}/${{ vars.CHAT_SERVICE_IMAGE_NAME }}

  release:
    name: Release Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Read version from package.json
        id: package-version
        run: echo "VERSION=$(jq -r .version package.json)" >> "$GITHUB_ENV"

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ vars.ORGANIZATION_NAME }}" --password-stdin

      - name: Pull, Tag, and Push Latest Image
        run: |
          docker pull ${{ vars.ORGANIZATION_NAME }}/${{ vars.CHAT_SERVICE_IMAGE_NAME }}:$VERSION
          docker tag ${{ vars.ORGANIZATION_NAME }}/${{ vars.CHAT_SERVICE_IMAGE_NAME }}:$VERSION ${{ vars.ORGANIZATION_NAME }}/${{ vars.CHAT_SERVICE_IMAGE_NAME }}:latest
          docker push ${{ vars.ORGANIZATION_NAME  }}/${{ vars.CHAT_SERVICE_IMAGE_NAME }}:latest

#  publish_images:
#      - name: Setup SSH
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H 217.114.15.68 >> ~/.ssh/known_hosts
#
#      - name: Execute deploy script
#        run: ssh tit@217.114.15.68 'cd /home/tit/pasim && ./deploy.sh'

#  connect_vps:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#
#      - name: Setup SSH and Deploy
#        run: |
#          mkdir -p ~/.ssh
#          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
#          chmod 600 ~/.ssh/id_rsa
#          ssh-keyscan -H ${{ secrets.VPS_IP }} >> ~/.ssh/known_hosts
#
#          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_IP }} 'cd /home/tit/pasim && ./deploy.sh'